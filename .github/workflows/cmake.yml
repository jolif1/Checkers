name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Qt
      # You may pin to the exact commit or the version.
      # uses: jurplel/install-qt-action@5a44615a267f89bd41f26c8319eaff7d1d4b9893
      uses: jurplel/install-qt-action@v2.9.0
      with:
        # Directory to install Qt
        #dir: # optional
        # Version of Qt to install
        version: 5.15.1 # optional, default is 5.12.9
        # Additional Qt modules to install
        modules: Gui # optional
        
    #- name: Googletest installer
      # You may pin to the exact commit or the version.
      # uses: MarkusJx/googletest-installer@2dbed3d0a9dc19bebe3e36773185ab9c17664c8d
      #uses: MarkusJx/googletest-installer@v1.1
      #with:
        # A path to the CC compiler
        #CC_path: # optional, default is 
        # A path to the CXX compiler
        #CXX_path: # optional, default is    
        
    - name: Install Google Test Package
      shell: bash
      run: sudo apt-get install -y googletest cmake;
           cd /usr/src/googletest/; sudo mkdir build; cd build; sudo cmake ..; sudo make -j 17 all install; 
      #TODO: platform-independant

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: EchoCurrentDir
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: pwd
      
    - name: FindInWorkDir
      shell: bash
      working-directory: /usr/include
      run: find . -type f -iname "gtest*"

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build/src
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
